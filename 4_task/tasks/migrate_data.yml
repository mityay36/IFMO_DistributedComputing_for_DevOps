---
- name: Проверка существования бэкапа
  ansible.builtin.stat:
    path: "{{ project_dir }}/backup/wordpress_backup.sql"
  register: backup_exists

- name: Поиск источников данных для миграции
  community.docker.docker_container_info:
    name: "{{ item }}"
  register: source_containers
  loop:
    - mysql-master
    - galera-node1
  failed_when: false

- name: Определение активного источника данных
  ansible.builtin.set_fact:
    active_source: "{{ item.item }}"
    active_port: "{{ '3306' if item.item == 'mysql-master' else '3306' }}"
  loop: "{{ source_containers.results }}"
  when:
    - item.exists
    - item.container.State.Status == "running"
  loop_control:
    label: "{{ item.item }}"

- name: Создание бэкапа WordPress базы данных
  community.mysql.mysql_db:
    login_host: localhost
    login_port: "{{ active_port }}"
    login_user: root
    login_password: "{{ db_pass }}"
    name: "{{ wordpress_db_name }}"
    state: dump
    target: "{{ project_dir }}/backup/wordpress_backup.sql"
    dump_extra_args: "--single-transaction --routines --triggers"
  when:
    - not backup_exists.stat.exists
    - active_source is defined
  register: backup_creation
  failed_when: false

- name: Создание пустого бэкапа при отсутствии данных
  ansible.builtin.copy:
    content: |
      -- MySQL dump для WordPress
      -- Пустой бэкап - нет данных для восстановления
      USE {{ wordpress_db_name }};
    dest: "{{ project_dir }}/backup/wordpress_backup.sql"
    mode: '0644'
  when:
    - not backup_exists.stat.exists
    - active_source is not defined

- name: Обновление статуса бэкапа
  ansible.builtin.stat:
    path: "{{ project_dir }}/backup/wordpress_backup.sql"
  register: backup_exists
