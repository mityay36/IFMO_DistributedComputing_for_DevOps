services:
{% for node in galera_nodes %}
  {{ node.name }}:
    image: mariadb:10.5
    container_name: {{ node.name }}
    ports:
      - "{{ node.port }}:3306"
    volumes:
      - {{ node.name }}_data:/var/lib/mysql
      - ./galera_config:/etc/mysql/conf.d
{% if loop.first %}
      - ./mysql_init:/docker-entrypoint-initdb.d
{% endif %}
    environment:
      MYSQL_ROOT_PASSWORD: {{ db_pass }}
      MYSQL_ROOT_HOST: '%'
{% if loop.first %}
      MYSQL_DATABASE: {{ wordpress_db_name }}
      MYSQL_USER: {{ wp_db_user }}
      MYSQL_PASSWORD: {{ wp_db_password }}
{% endif %}
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
    command: >
{% if loop.first %}
      --wsrep-new-cluster
      --wsrep-cluster-address=gcomm://
{% else %}
      --wsrep-cluster-address={{ galera_cluster_address }}
{% endif %}
      --wsrep-cluster-name={{ galera_cluster_name }}
      --wsrep-node-name={{ node.name }}
      --wsrep-node-address={{ node.name }}
      --wsrep-sst-method=rsync
      --wsrep-sst-auth={{ galera_sst_user }}:{{ galera_sst_password }}
      --binlog-format=ROW
      --default-storage-engine=InnoDB
      --innodb-autoinc-lock-mode=2
      --bind-address=0.0.0.0
    networks:
      - galera_network
    restart: unless-stopped
{% if not loop.first %}
    depends_on:
      - galera-node1
{% endif %}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p{{ db_pass }}"]
      interval: 30s
      timeout: 10s
      retries: 5

{% endfor %}

  {{ loadbalancer }}:
    image: haproxy:2.6
    container_name: {{ loadbalancer }}
    ports:
      - "{{ haproxy_external_port }}:3306"
      - "{{ haproxy_stats_port }}:8404"
    volumes:
      - ./haproxy_config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - galera_network
    restart: unless-stopped
    depends_on:
{% for node in galera_nodes %}
      - {{ node.name }}
{% endfor %}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8404/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  wordpress:
    image: wordpress:{{ wp_version }}
    container_name: wordpress-galera
    ports:
      - "{{ wordpress_port }}:80"
    volumes:
      - wp_data:/var/www/html
    environment:
      WORDPRESS_DB_HOST: {{ loadbalancer }}:3306
      WORDPRESS_DB_USER: {{ wp_db_user }}
      WORDPRESS_DB_PASSWORD: {{ wp_db_password }}
      WORDPRESS_DB_NAME: {{ wordpress_db_name }}
    networks:
      - galera_network
    restart: unless-stopped
    depends_on:
      - {{ loadbalancer }}

  # Мониторинг экспортеры
  haproxy-exporter:
    image: prom/haproxy-exporter:latest
    container_name: haproxy-exporter
    ports:
      - "9101:9101"
    command:
      - '--haproxy.scrape-uri=http://{{ loadbalancer }}:8404/stats?stats;csv'
    networks:
      - galera_network
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - {{ loadbalancer }}

{% for node in galera_nodes %}
  mysql-exporter-{{ loop.index }}:
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter-{{ loop.index }}
    ports:
      - "{{ mysql_exporter_base_port + loop.index - 1 }}:9104"
    command:
      - "--mysqld.username=exporter:exporter_password"
      - "--mysqld.address={{ node.name }}:3306"
    environment:
      DATA_SOURCE_NAME: "exporter:exporter_password@({{ node.name }}:3306)/"
    networks:
      - galera_network
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - {{ node.name }}

{% endfor %}

networks:
  galera_network:
    driver: bridge
  monitoring_network:
    name: monitoring_monitoring
    external: true

volumes:
{% for node in galera_nodes %}
  {{ node.name }}_data:
{% endfor %}
  wp_data:
